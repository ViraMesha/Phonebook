{"version":3,"file":"static/js/798.b88be327.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Button = styled.button`\n  font-size: large;\n  display: inline-block;\n  padding: 15px 25px;\n  color: white;\n  background-color: #654ea3;\n  background-image: rgb(101, 78, 163);\n  border: 1px solid #654ea3;\n  border-radius: 1rem;\n  box-shadow: rgba(255, 255, 255, 0.15) 0 1px 0 inset,\n    rgba(46, 54, 80, 0.075) 0 1px 1px;\n  cursor: pointer;\n  width: 200px;\n  align-self: center;\n  transition: color 500ms ease-in-out, background-color 500ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #654ea3;\n    background-color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  gap: 30px;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n  border-radius: 5px;\n  margin: 40px 0px;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport { toast } from 'react-toastify';\nimport { Form } from './ContactForm.styled';\nimport { Button } from 'components/Button/Button.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from './../../redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const alreadyInContacts = contacts.find(\n      item => item.name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n\n    if (alreadyInContacts) {\n      toast.warn(`${form.elements.name.value} is already in contacts.`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    toast.success('Successully added to your phonebook');\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <TextField\n        label=\"Number\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 500;\n  font-size: 18px;\n  color: #1a3b5d;\n`;\n\nexport const FormInput = styled.input`\n  width: 311px;\n  height: 20px;\n  padding: 5px;\n  box-shadow: none;\n  border: 1px solid #ced6e0;\n  border-radius: 5px;\n  background: none;\n  color: #1a3b5d;\n  outline: none;\n  margin-bottom: 20px;\n  transition: border-color 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    border-color: #654ea3;\n  }\n  &:focus {\n    box-shadow: 0px 10px 20px -13px rgb(32 56 117 / 35%);\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { FormLabel, FormInput } from './Filter.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <FormLabel>\n      Find contacts by name\n      <FormInput\n        type=\"text\"\n        onChange={onFilterChange}\n        value={filter}\n      ></FormInput>\n    </FormLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactInformation = styled.li`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ContactDeleteBtn = styled.button`\n  padding: 5px;\n  width: 70px;\n  color: white;\n  background-color: #4d4ae8;\n  background-image: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.15),\n    rgba(255, 255, 255, 0)\n  );\n  border: 1px solid #4d4ae8;\n  border-radius: 1rem;\n  box-shadow: rgba(255, 255, 255, 0.15) 0 1px 0 inset,\n    rgba(46, 54, 80, 0.075) 0 1px 1px;\n  cursor: pointer;\n  align-self: center;\n  transition: color 500ms ease-in-out, background-color 500ms ease-in-out;\n  &:hover,\n  &:focus {\n    color: #4d4ae8;\n    background-color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactInformation, ContactDeleteBtn } from './ContactListItem.styled';\n\nconst ContactListItem = ({ name, number, onDelete }) => {\n  return (\n    <ContactInformation>\n      <div>\n        {name}: {number}\n      </div>\n      <ContactDeleteBtn onClick={onDelete}>Delete</ContactDeleteBtn>\n    </ContactInformation>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 323px;\n  gap: 10px;\n  border-radius: 5px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport ContactListItem from '../ContactListItem';\nimport { ContactsList } from './ContactList.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from './../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <ContactsList>\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem\n              key={id}\n              name={name}\n              number={number}\n              onDelete={() => dispatch(deleteContact(id))}\n            />\n          ))}\n        </ContactsList>\n      ) : (\n        <p> Your phonebook is empty. Please add a contact.</p>\n      )}\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={{ maxWidth: '450px', margin: '0 auto' }}>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 style={{ fontSize: '34px', marginBottom: '10px' }}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Button","styled","Form","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","find","item","name","toLowerCase","elements","value","toast","addContact","number","reset","TextField","label","variant","color","type","pattern","title","required","FormLabel","FormInput","Filter","onChange","setFilter","ContactInformation","ContactDeleteBtn","onDelete","onClick","ContactsList","ContactList","filteredContacts","normalizedFilter","contact","includes","getFilteredContacts","length","map","id","deleteContact","useEffect","fetchContacts","style","maxWidth","margin","fontSize","marginBottom"],"sourceRoot":""}