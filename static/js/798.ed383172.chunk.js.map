{"version":3,"file":"static/js/798.ed383172.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  gap: 30px;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n  border-radius: 5px;\n  margin: 40px 0px;\n`;\n\nexport const FormBtn = styled.button`\n  display: inline-block;\n  padding: 10px 15px;\n  color: white;\n  background-color: #4d4ae8;\n  background-image: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.15),\n    rgba(255, 255, 255, 0)\n  );\n  border: 1px solid #4d4ae8;\n  border-radius: 1rem;\n  box-shadow: rgba(255, 255, 255, 0.15) 0 1px 0 inset,\n    rgba(46, 54, 80, 0.075) 0 1px 1px;\n  cursor: pointer;\n  width: 150px;\n  align-self: center;\n  transition: color 500ms ease-in-out, background-color 500ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #4d4ae8;\n    background-color: white;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 500;\n  color: #1a3b5d;\n`;\n\nexport const FormInput = styled.input`\n  width: 100%;\n  height: 20px;\n  padding: 5px;\n  box-shadow: none;\n  border: 1px solid #ced6e0;\n  border-radius: 5px;\n  background: none;\n  color: #1a3b5d;\n  outline: none;\n  transition: border-color 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    border-color: #3d9cff;\n  }\n  &:focus {\n    box-shadow: 0px 10px 20px -13px rgb(32 56 117 / 35%);\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormLabel, FormInput, FormBtn } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from './../../redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const alreadyInContacts = contacts.find(\n      item => item.name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n\n    if (alreadyInContacts) {\n      alert(`${form.elements.name.value} is already in contacts.`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormBtn type=\"submit\">Add contact</FormBtn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 500;\n  font-size: 18px;\n  color: #1a3b5d;\n`;\n\nexport const FormInput = styled.input`\n  width: 311px;\n  height: 20px;\n  padding: 5px;\n  box-shadow: none;\n  border: 1px solid #ced6e0;\n  border-radius: 5px;\n  background: none;\n  color: #1a3b5d;\n  outline: none;\n  margin-bottom: 20px;\n  transition: border-color 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    border-color: #3d9cff;\n  }\n  &:focus {\n    box-shadow: 0px 10px 20px -13px rgb(32 56 117 / 35%);\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { FormLabel, FormInput } from './Filter.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <FormLabel>\n      Find contacts by name\n      <FormInput\n        type=\"text\"\n        onChange={onFilterChange}\n        value={filter}\n      ></FormInput>\n    </FormLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactInformation = styled.li`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ContactDeleteBtn = styled.button`\n  padding: 5px;\n  width: 70px;\n  color: white;\n  background-color: #4d4ae8;\n  background-image: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.15),\n    rgba(255, 255, 255, 0)\n  );\n  border: 1px solid #4d4ae8;\n  border-radius: 1rem;\n  box-shadow: rgba(255, 255, 255, 0.15) 0 1px 0 inset,\n    rgba(46, 54, 80, 0.075) 0 1px 1px;\n  cursor: pointer;\n  align-self: center;\n  transition: color 500ms ease-in-out, background-color 500ms ease-in-out;\n  &:hover,\n  &:focus {\n    color: #4d4ae8;\n    background-color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactInformation, ContactDeleteBtn } from './ContactListItem.styled';\n\nconst ContactListItem = ({ name, number, onDelete }) => {\n  return (\n    <ContactInformation>\n      <div>\n        {name}: {number}\n      </div>\n      <ContactDeleteBtn onClick={onDelete}>Delete</ContactDeleteBtn>\n    </ContactInformation>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 300px;\n  gap: 10px;\n  padding: 15px;\n  border-radius: 5px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport ContactListItem from '../ContactListItem';\nimport { ContactsList } from './ContactList.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from './../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <ContactsList>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onDelete={() => dispatch(deleteContact(id))}\n        />\n      ))}\n    </ContactsList>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 style={{ fontSize: '34px', marginBottom: '10px' }}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","FormBtn","FormLabel","FormInput","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","find","item","name","toLowerCase","elements","value","alert","addContact","number","reset","type","pattern","title","required","Filter","onChange","setFilter","ContactInformation","ContactDeleteBtn","onDelete","onClick","ContactsList","ContactList","filteredContacts","normalizedFilter","contact","includes","getFilteredContacts","map","id","deleteContact","useEffect","fetchContacts","style","fontSize","marginBottom"],"sourceRoot":""}