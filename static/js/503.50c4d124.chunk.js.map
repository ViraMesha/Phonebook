{"version":3,"file":"static/js/503.50c4d124.chunk.js","mappings":"0JACaA,E,QAASC,GAAAA,OAAH,qiB,gFCCNC,E,QAAgBD,GAAAA,IAAH,yC,UCAbE,EAAS,WACpB,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CAAcE,MAAM,MAAMC,MAAM,aAGrC,C,6HCNYC,EAAUL,EAAAA,GAAAA,IAAH,+CAIPM,EAAON,EAAAA,GAAAA,KAAH,2H,kDCGJO,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAoB9B,OACE,UAACP,EAAD,WACGK,IAAa,SAACR,EAAA,EAAD,KACd,UAACI,EAAD,CAAMO,SArBW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnB,GACuC,KAArCD,EAAKE,SAASC,MAAMC,MAAMC,QACO,KAAjCL,EAAKE,SAASI,SAASF,MAEvB,OAAOG,EAAAA,GAAAA,MAAY,8BAErBf,GACEgB,EAAAA,EAAAA,IAAM,CACJL,MAAOH,EAAKE,SAASC,MAAMC,MAC3BE,SAAUN,EAAKE,SAASI,SAASF,SAGrCJ,EAAKS,OACN,EAKiCC,aAAa,MAA3C,WACE,SAACC,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,QACLC,KAAK,QACLC,QAAQ,WACR3B,MAAM,eAER,SAACuB,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,WACLC,KAAK,WACLC,QAAQ,WACR3B,MAAM,eAER,SAAC,IAAD,CAAQyB,KAAK,SAAb,yBAIP,EChDD,EAJc,WACZ,OAAO,SAACtB,EAAD,GACR,C","sources":["components/Button/Button.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Button = styled.button`\n  font-size: large;\n  display: inline-block;\n  padding: 15px 25px;\n  color: white;\n  background-color: #654ea3;\n  background-image: rgb(101, 78, 163);\n  border: 1px solid #654ea3;\n  border-radius: 1rem;\n  box-shadow: rgba(255, 255, 255, 0.15) 0 1px 0 inset,\n    rgba(46, 54, 80, 0.075) 0 1px 1px;\n  cursor: pointer;\n  width: 200px;\n  align-self: center;\n  transition: color 500ms ease-in-out, background-color 500ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #654ea3;\n    background-color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  margin: auto;\n`;\n","import { InfinitySpin } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <InfinitySpin width=\"200\" color=\"#654ea3\" />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  max-width: 350px;\n  margin: 0 auto;\n  gap: 20px;\n  flex-direction: column;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Button } from 'components/Button/Button.styled';\nimport { Wrapper, Form } from './LoginForm.styled';\nimport { TextField } from '@mui/material';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectAuthIsLoading } from 'redux/auth/selectors';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAuthIsLoading);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (\n      form.elements.email.value.trim() === '' ||\n      form.elements.password.value === ''\n    ) {\n      return toast.error('Please fill in all fields!');\n    }\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Wrapper>\n      {isLoading && <Loader />}\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <TextField\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          variant=\"outlined\"\n          color=\"secondary\"\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          variant=\"outlined\"\n          color=\"secondary\"\n        />\n        <Button type=\"submit\">Log In</Button>\n      </Form>\n    </Wrapper>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["Button","styled","LoaderWrapper","Loader","width","color","Wrapper","Form","LoginForm","dispatch","useDispatch","isLoading","useSelector","selectAuthIsLoading","onSubmit","event","preventDefault","form","currentTarget","elements","email","value","trim","password","toast","logIn","reset","autoComplete","TextField","label","type","name","variant"],"sourceRoot":""}